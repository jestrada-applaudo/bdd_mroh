{
  "openapi": "3.0.1",
  "info": {
    "title": "Modular Monolith API",
    "description": "API documentation for the Modular Monolith application.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8085/mroh-backend-hms",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Patterns",
      "description": "Operations for managing patterns"
    },
    {
      "name": "Opcos",
      "description": "Operations for managing opcos"
    },
    {
      "name": "Holiday Management",
      "description": "Operations for managing Holidays"
    },
    {
      "name": "Categories",
      "description": "Operations for managing categories"
    },
    {
      "name": "Type of Revision",
      "description": "Operations for managing revision types"
    },
    {
      "name": "Revision Management",
      "description": "Operations related to revision management"
    },
    {
      "name": "Customer Management",
      "description": "Operations for managing customers"
    },
    {
      "name": "Fleet Types",
      "description": "Operations for managing fleet types"
    },
    {
      "name": "HeatMap Management",
      "description": "Operations for managing HeatMaps"
    },
    {
      "name": "Revenue",
      "description": "Operations for managing AdHoc Revenues"
    },
    {
      "name": "Hangar Management",
      "description": "Operations for managing Hangars"
    },
    {
      "name": "BlockRestriction Management",
      "description": "Operations for managing BlockRestrictions"
    },
    {
      "name": "Aircraft Management",
      "description": "Operations for managing Aircraft"
    },
    {
      "name": "Check Types",
      "description": "Operations for managing check types"
    },
    {
      "name": "Family Fleet",
      "description": "Operations for managing family fleet"
    },
    {
      "name": "Line Management",
      "description": "Operations for managing Lines"
    }
  ],
  "paths": {
    "/api/revisions/revenue_options/parameters/{type}/delete": {
      "put": {
        "tags": [
          "Revenue"
        ],
        "summary": "Delete multiple revenue entries",
        "operationId": "deleteRevenues",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "labor",
                "material",
                "engineering",
                "miscellaneous"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRevenuesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRevenuesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/holidays/{id}": {
      "get": {
        "tags": [
          "Holiday Management"
        ],
        "summary": "Get holiday by id",
        "description": "Returns a holiday",
        "operationId": "getByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Holiday"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Holiday Management"
        ],
        "summary": "Update existing holiday",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHolidayRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Holiday updated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayResponse"
                }
              }
            }
          },
          "404": {
            "description": "Holiday not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayResponse"
                }
              }
            }
          },
          "409": {
            "description": "Holiday with same details exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/holidays/delete": {
      "put": {
        "tags": [
          "Holiday Management"
        ],
        "summary": "Delete multiple holidays",
        "description": "Delete multiple holidays by providing their ids",
        "operationId": "deleteHolidays",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteHolidayRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Holidays successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteHolidayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/heat-maps/{id}": {
      "get": {
        "tags": [
          "HeatMap Management"
        ],
        "summary": "Get heatmap by id",
        "description": "Returns a heatmap",
        "operationId": "getByID_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HeatMap"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HeatMap Management"
        ],
        "summary": "Update existing heatmap",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHeatMapRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Heatmap updated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HeatMapResponse"
                }
              }
            }
          },
          "404": {
            "description": "Heatmap not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HeatMapResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HeatMapResponse"
                }
              }
            }
          },
          "409": {
            "description": "Heatmap with same opCoId/revisionId exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HeatMapResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/heat-maps/delete": {
      "put": {
        "tags": [
          "HeatMap Management"
        ],
        "summary": "Delete multiple heatmaps",
        "description": "Delete multiple heatmaps by providing their ids",
        "operationId": "deleteHeatMaps",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteHeatMapRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Heatmaps successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteHeatMapResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/block-restrictions/{id}": {
      "get": {
        "tags": [
          "BlockRestriction Management"
        ],
        "summary": "Get block restriction by id",
        "description": "Returns a block restriction",
        "operationId": "getByID_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BlockRestriction"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BlockRestriction Management"
        ],
        "summary": "Update existing block restriction",
        "operationId": "update_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBlockRestrictionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Block restriction updated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BlockRestrictionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Block restriction with same lineCode/revisionId exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BlockRestrictionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Block restriction not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BlockRestrictionResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BlockRestrictionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/block-restrictions/delete": {
      "put": {
        "tags": [
          "BlockRestriction Management"
        ],
        "summary": "Delete multiple block restrictions",
        "description": "Delete multiple block restrictions by providing their ids",
        "operationId": "deleteBlockRestrictions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBlockRestrictionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Block restrictions successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBlockRestrictionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/type-of-revision/{id}": {
      "put": {
        "tags": [
          "Type of Revision"
        ],
        "summary": "Update revision type",
        "operationId": "updateRevisionType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTypeOfRevisionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Revision type not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TypeOfRevisionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Revision name already exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TypeOfRevisionResponse"
                }
              }
            }
          },
          "200": {
            "description": "Successfully updated revision type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TypeOfRevisionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TypeOfRevisionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/lines/{id}": {
      "get": {
        "tags": [
          "Line Management"
        ],
        "summary": "Get line by id",
        "description": "Returns a line",
        "operationId": "getByID_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Line"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Line Management"
        ],
        "summary": "Update existing line",
        "operationId": "update_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Line updated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LineResponse"
                }
              }
            }
          },
          "409": {
            "description": "Line with same name/opCoId/order exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Line not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LineResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LineResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/lines/delete": {
      "put": {
        "tags": [
          "Line Management"
        ],
        "summary": "Delete multiple lines",
        "description": "Delete multiple lines by providing their ids",
        "operationId": "deleteLines",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteLineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Lines successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteLineResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/hangars/{id}": {
      "get": {
        "tags": [
          "Hangar Management"
        ],
        "summary": "Get hangar by id",
        "description": "Returns a hangar",
        "operationId": "getByID_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Hangar"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hangar Management"
        ],
        "summary": "Update existing hangar",
        "operationId": "update_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHangarRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Hangar updated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HangarResponse"
                }
              }
            }
          },
          "404": {
            "description": "Hangar not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HangarResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HangarResponse"
                }
              }
            }
          },
          "409": {
            "description": "Hangar with same name/opCo/order exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HangarResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/hangars/delete": {
      "put": {
        "tags": [
          "Hangar Management"
        ],
        "summary": "Delete multiple hangars",
        "description": "Delete multiple hangars by providing their ids",
        "operationId": "deleteHangars",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteHangarRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Hangars successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteHangarResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/fleet-types/{id}": {
      "put": {
        "tags": [
          "Fleet Types"
        ],
        "summary": "Update existing fleet type",
        "operationId": "updateFleetType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFleetTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Fleet type not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FleetTypeResponse"
                }
              }
            }
          },
          "409": {
            "description": "Fleet type with same name exists for family",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FleetTypeResponse"
                }
              }
            }
          },
          "200": {
            "description": "Fleet type updated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FleetTypeResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FleetTypeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/family-fleet/{id}": {
      "get": {
        "tags": [
          "Family Fleet"
        ],
        "summary": "Get family fleet by id",
        "description": "Returns a family fleet.",
        "operationId": "getByID_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FamilyFleet"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Family Fleet"
        ],
        "summary": "Update existing family fleet",
        "operationId": "updateFamilyFleet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFamilyFleetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "family fleet updated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FamilyFleetResponse"
                }
              }
            }
          },
          "404": {
            "description": "family fleet not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FamilyFleetResponse"
                }
              }
            }
          },
          "409": {
            "description": "family fleet with same name/code exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FamilyFleetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/family-fleet/delete": {
      "put": {
        "tags": [
          "Family Fleet"
        ],
        "summary": "Delete multiple fleet types",
        "operationId": "deleteFleetTypes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteFamilyFleetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Fleet types successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFleetTypesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/customers/{id}": {
      "put": {
        "tags": [
          "Customer Management"
        ],
        "summary": "Update existing customer",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Customer not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "409": {
            "description": "Customer with same name/code exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "200": {
            "description": "Customer updated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/check-types/{id}": {
      "put": {
        "tags": [
          "Check Types"
        ],
        "summary": "Update an existing check type",
        "operationId": "updateCheckType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCheckTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Check type updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTypeResponse"
                }
              }
            }
          },
          "409": {
            "description": "Check type with same name exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTypeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Check type not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTypeResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTypeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/categories/{id}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update an existing category",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Category not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Category name already exists or probability range overlaps",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Category updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/categories/delete": {
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete multiple categories",
        "operationId": "deleteCategories",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCategoriesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Categories successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/aircraft/{id}": {
      "get": {
        "tags": [
          "Aircraft Management"
        ],
        "summary": "Get aircraft by id",
        "description": "Returns a aircrafts",
        "operationId": "getByID_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Aircraft"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Aircraft Management"
        ],
        "summary": "Update existing aircraft",
        "operationId": "update_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAircraftRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "aircraft updated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "409": {
            "description": "aircraft with same tail number/fleetTypeId exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftResponse"
                }
              }
            }
          },
          "404": {
            "description": "aircraft not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/aircraft/delete": {
      "put": {
        "tags": [
          "Aircraft Management"
        ],
        "summary": "Delete multiple aircrafts",
        "description": "Delete multiple aircrafts by providing their ids",
        "operationId": "deleteAircrafts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAircraftRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "aircrafts successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAircraftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions": {
      "get": {
        "tags": [
          "Revision Management"
        ],
        "summary": "Get and filter revisions",
        "description": "Returns a paginated list of revisions. By default, returns the most recently updated revisions. Can be filtered using query parameters.",
        "operationId": "getAllRevisions",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opCoId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weekNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isOfficial",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRevisionResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Revision Management"
        ],
        "summary": "Create a new revision",
        "operationId": "createRevision",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRevisionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Revision created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RevisionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RevisionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/revenue_options/parameters/{type}": {
      "post": {
        "tags": [
          "Revenue"
        ],
        "summary": "Create new revenue entry",
        "operationId": "create",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "labor",
                "material",
                "engineering",
                "miscellaneous"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdHocRevenueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAdHocRevenueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/holidays": {
      "post": {
        "tags": [
          "Holiday Management"
        ],
        "summary": "Create a new holiday",
        "description": "Create a new holiday with the provided details",
        "operationId": "create_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHolidayRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Holiday already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Holiday created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/heat-maps": {
      "get": {
        "tags": [
          "HeatMap Management"
        ],
        "summary": "Get and filter heatmaps",
        "description": "Returns a paginated list of heatmaps with sorting capabilities",
        "operationId": "getAll",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opCoId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "revisionId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 300
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedHeatMapResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HeatMap Management"
        ],
        "summary": "Create a new heatmap",
        "description": "Create a new heatmap with the provided details",
        "operationId": "create_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHeatMapRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Heatmap created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HeatMapResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Heatmap already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/block-restrictions": {
      "post": {
        "tags": [
          "BlockRestriction Management"
        ],
        "summary": "Create a new block restriction",
        "description": "Create a new block restriction with the provided details",
        "operationId": "create_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlockRestrictionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Block restriction created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockRestrictionResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Block restriction already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/type-of-revision": {
      "get": {
        "tags": [
          "Type of Revision"
        ],
        "summary": "Get and filter revision types",
        "operationId": "getAllRevisionTypes",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTypeOfRevisionResponse"
                }
              }
            }
          },
          "200": {
            "description": "Revision types retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTypeOfRevisionResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Type of Revision"
        ],
        "summary": "Create new revision type",
        "operationId": "createRevisionType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTypeOfRevisionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TypeOfRevisionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/type-of-revision/delete": {
      "post": {
        "tags": [
          "Type of Revision"
        ],
        "summary": "Delete multiple revision types",
        "operationId": "deleteRevisionTypes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTypeOfRevisionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully deleted revision types",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTypeOfRevisionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTypeOfRevisionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/lines": {
      "get": {
        "tags": [
          "Line Management"
        ],
        "summary": "Get and filter lines",
        "description": "Returns a paginated list of lines with sorting capabilities",
        "operationId": "getAll_1",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 300
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedLineResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Line Management"
        ],
        "summary": "Create a new line",
        "description": "Create a new line with the provided details",
        "operationId": "create_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Line created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineResponse"
                }
              }
            }
          },
          "409": {
            "description": "Line already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/hangars": {
      "get": {
        "tags": [
          "Hangar Management"
        ],
        "summary": "Get and filter hangars",
        "description": "Returns a paginated list of hangars with sorting capabilities",
        "operationId": "getAll_2",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hangarName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opCoId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 300
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedHangarResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hangar Management"
        ],
        "summary": "Create a new hangar",
        "description": "Create a new hangar with the provided details",
        "operationId": "create_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHangarRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Hangar already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Hangar created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HangarResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/fleet-types": {
      "get": {
        "tags": [
          "Fleet Types"
        ],
        "summary": "Get and filter fleet types",
        "operationId": "getAllFleetTypes",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFleetTypeResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Fleet Types"
        ],
        "summary": "Create a new fleet type",
        "operationId": "createFleetType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFleetTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Fleet type created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FleetTypeResponse"
                }
              }
            }
          },
          "409": {
            "description": "Fleet type already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/fleet-types/delete": {
      "post": {
        "tags": [
          "Fleet Types"
        ],
        "summary": "Delete multiple fleet types",
        "operationId": "deleteFleetTypes_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteFleetTypesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Fleet types successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFleetTypesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/family-fleet": {
      "get": {
        "tags": [
          "Family Fleet"
        ],
        "summary": "Get all family fleets with filtering and sorting",
        "operationId": "getAllFamilyFleets",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 300
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFamilyFleetResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Family Fleet"
        ],
        "summary": "Create a new family fleet",
        "operationId": "createFamilyFleet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFamilyFleetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Family fleet created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FamilyFleetResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/parameters/customers": {
      "get": {
        "tags": [
          "Customer Management"
        ],
        "summary": "Get all customers with filtering and sorting",
        "operationId": "getAllCustomers",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 300
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCustomerResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer Management"
        ],
        "summary": "Create a new customer",
        "operationId": "createCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Customer already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Customer created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/customers/delete": {
      "post": {
        "tags": [
          "Customer Management"
        ],
        "summary": "Delete multiple customers",
        "operationId": "deleteCustomers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCustomersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Customers successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCustomersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/check-types": {
      "get": {
        "tags": [
          "Check Types"
        ],
        "summary": "Get and filter check types",
        "operationId": "getAllCheckTypes",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChecktypeResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Check Types"
        ],
        "summary": "Create a new check type",
        "operationId": "createCheckType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTypeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/check-types/delete": {
      "post": {
        "tags": [
          "Check Types"
        ],
        "summary": "Delete multiple check types",
        "operationId": "deleteCheckTypes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCheckTypesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Check types successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCheckTypesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get and filter categories",
        "operationId": "getAllCategories",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCategoryResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create a new category",
        "operationId": "createCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Category name already exists or probability range overlaps",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "201": {
            "description": "Category created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/aircraft": {
      "get": {
        "tags": [
          "Aircraft Management"
        ],
        "summary": "Get and filter aircraft",
        "description": "Returns a paginated list of aircraft with sorting capabilities",
        "operationId": "getAll_3",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tailNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fleetTypeName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 300
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAircraftResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Aircraft Management"
        ],
        "summary": "Create a new aircraft",
        "description": "Create a new aircraft with the provided details",
        "operationId": "create_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAircraftRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Customer aircraft",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Aircraft already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": [
          "secured-controller"
        ],
        "summary": "Get current user information",
        "operationId": "userInfo",
        "responses": {
          "200": {
            "description": "Current user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                },
                "example": {
                  "id": "123a4567-e89b-12d3-a456-426614174000",
                  "name": "John Doe",
                  "email": "john.doe@example.com"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "INTERNAL_ERROR",
                  "message": "An unexpected error occurred",
                  "statusCode": 500
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "UNAUTHORIZED",
                  "message": "Authentication required",
                  "statusCode": 401
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}": {
      "get": {
        "tags": [
          "Revision Management"
        ],
        "operationId": "getRevisionById",
        "parameters": [
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Revision"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/revenue_options/parameters/{type}": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Get paginated and sorted revenues by type",
        "operationId": "getRevenues",
        "parameters": [
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "labor",
                "material",
                "engineering",
                "miscellaneous"
              ]
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAdHocRevenueResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/revenue_options/parameters/{type}/excel": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Generate Excel file for adhoc revenues",
        "operationId": "generateExcel",
        "parameters": [
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "labor",
                "material",
                "engineering",
                "miscellaneous"
              ]
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file generated",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/revenue_options/parameters/{type}/csv": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Generate CSV file for adhoc revenues",
        "operationId": "generateCsv",
        "parameters": [
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "labor",
                "material",
                "engineering",
                "miscellaneous"
              ]
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/holidays": {
      "get": {
        "tags": [
          "Holiday Management"
        ],
        "operationId": "getHolidaysByRevisionId",
        "parameters": [
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 300
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedHolidayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/holidays/excel": {
      "get": {
        "tags": [
          "Holiday Management"
        ],
        "summary": "Generate Excel file for holidays by revision id",
        "description": "Generates an Excel file containing the list of holidays.",
        "operationId": "generateHolidaysExcelRevision",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file generated",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/holidays/csv": {
      "get": {
        "tags": [
          "Holiday Management"
        ],
        "summary": "Generate CSV file for holidays by revision id",
        "description": "Generates a CSV file containing the list of holidays.",
        "operationId": "generateHolidaysCSVRevision",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/heat-maps": {
      "get": {
        "tags": [
          "HeatMap Management"
        ],
        "operationId": "getHeatMapsByRevisionId",
        "parameters": [
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 300
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedHeatMapResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/heat-maps/excel": {
      "get": {
        "tags": [
          "HeatMap Management"
        ],
        "summary": "Generate Excel file for heatmaps by revision id",
        "description": "Generates an Excel file containing the list of heatmaps.",
        "operationId": "generateHeatMapsExcelRevision",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opCoId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file generated",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/heat-maps/csv": {
      "get": {
        "tags": [
          "HeatMap Management"
        ],
        "summary": "Generate CSV file for heatmaps by revision id",
        "description": "Generates a CSV file containing the list of heatmaps.",
        "operationId": "generateHeatMapCSVRevision",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opCoId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/block-restrictions": {
      "get": {
        "tags": [
          "BlockRestriction Management"
        ],
        "operationId": "getBlockRestrictionsByRevisionId",
        "parameters": [
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 300
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBlockRestrictionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/block-restrictions/excel": {
      "get": {
        "tags": [
          "BlockRestriction Management"
        ],
        "summary": "Generate Excel file for block restrictions by revision id",
        "description": "Generates an Excel file containing the list of block restrictions.",
        "operationId": "generateBlockRestrictionsExcelRevision",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file generated",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/revisions/{revisionId}/block-restrictions/csv": {
      "get": {
        "tags": [
          "BlockRestriction Management"
        ],
        "summary": "Generate CSV file for block restrictions by revision id",
        "description": "Generates a CSV file containing the list of block restrictions.",
        "operationId": "generateBlockRestrictionsCSVRevision",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/api/revisions/search": {
      "get": {
        "tags": [
          "Revision Management"
        ],
        "summary": "Get revision suggestions based on search text",
        "operationId": "getSuggestions",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Text to search for in revision numbers or names",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of suggestions to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "INTERNAL_ERROR",
                  "message": "An unexpected error occurred",
                  "statusCode": 500
                }
              }
            }
          },
          "200": {
            "description": "List of revision suggestions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RevisionSuggestion"
                  }
                },
                "example": [
                  {
                    "revisionCode": "REV-2024-001",
                    "revisionName": "Budget 2024",
                    "revisionType": "Budget",
                    "year": 2024,
                    "week": 45
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "VALIDATION_ERROR",
                  "message": "Invalid request parameters",
                  "statusCode": 400,
                  "cause": "Search text cannot be empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/type-of-revision/excel": {
      "get": {
        "tags": [
          "Type of Revision"
        ],
        "summary": "Download revision types as Excel",
        "description": "Generates an Excel file containing revision type data. Can be filtered using search parameters.",
        "operationId": "downloadRevisionTypeExcel",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Text to search by revision type name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Excel file generated successfully",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          }
        }
      }
    },
    "/api/parameters/type-of-revision/csv": {
      "get": {
        "tags": [
          "Type of Revision"
        ],
        "summary": "Download revision types as CSV",
        "description": "Generates a CSV file containing revision type data. Can be filtered using search parameters.",
        "operationId": "downloadRevisionTypeCsv",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Text to search by revision type name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/api/parameters/patterns/fleet-types": {
      "get": {
        "tags": [
          "Patterns"
        ],
        "summary": "Get and filter fleet type patterns",
        "operationId": "getAllFleetTypePatterns",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved fleet type patterns",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPatternResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/patterns/check-types": {
      "get": {
        "tags": [
          "Patterns"
        ],
        "summary": "Get and filter check type patterns",
        "operationId": "getAllCheckTypePatterns",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved check type patterns",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPatternResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/opcos/find": {
      "get": {
        "tags": [
          "Opcos"
        ],
        "summary": "Find and filter Opcos with search functionality",
        "operationId": "findOpcos",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Text to search for in Opco names and descriptions",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "matchSize",
            "in": "query",
            "description": "Maximum number of matching results to return",
            "required": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OpcoSearchResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/lines/excel": {
      "get": {
        "tags": [
          "Line Management"
        ],
        "summary": "Generate Excel file for lines",
        "description": "Generates an Excel file containing the list of lines.",
        "operationId": "generateLinesExcel",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file generated",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/lines/csv": {
      "get": {
        "tags": [
          "Line Management"
        ],
        "summary": "Generate CSV file for lines",
        "description": "Generates a CSV file containing the list of lines.",
        "operationId": "generateLineCSV",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/api/parameters/hangars/find": {
      "get": {
        "tags": [
          "Hangar Management"
        ],
        "summary": "Get search and filter hangars",
        "description": "Returns a paginated list of hangars with sorting capabilities",
        "operationId": "getAllSearch",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hangarName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opCoId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hangar"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/hangars/excel": {
      "get": {
        "tags": [
          "Hangar Management"
        ],
        "summary": "Generate Excel file for hangars",
        "description": "Generates an Excel file containing the list of hangars.",
        "operationId": "generateHangarsExcel",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hangarName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opCoId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file generated",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/hangars/csv": {
      "get": {
        "tags": [
          "Hangar Management"
        ],
        "summary": "Generate CSV file for hangars",
        "description": "Generates a CSV file containing the list of hangars.",
        "operationId": "generateHangarCSV",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hangarName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opCoId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/api/parameters/fleet-types/excel": {
      "get": {
        "tags": [
          "Fleet Types"
        ],
        "summary": "Download fleet types as Excel",
        "description": "Generates an Excel file containing fleet type data. Can be filtered using search parameters.",
        "operationId": "downloadFleetTypeExcel",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Text to search across fleet type fields",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fleetTypeName",
            "in": "query",
            "description": "Specific fleet type name to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fleetTypeCode",
            "in": "query",
            "description": "Specific fleet type code to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Excel file generated successfully",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/fleet-types/csv": {
      "get": {
        "tags": [
          "Fleet Types"
        ],
        "summary": "Download fleet types as CSV",
        "description": "Generates a CSV file containing fleet type data. Can be filtered using search parameters.",
        "operationId": "downloadFleetTypeCsv",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Text to search across fleet type fields",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fleetTypeName",
            "in": "query",
            "description": "Specific fleet type name to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fleetTypeCode",
            "in": "query",
            "description": "Specific fleet type code to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/family-fleet/excel": {
      "get": {
        "tags": [
          "Family Fleet"
        ],
        "summary": "Generate EXCEL file for family fleet",
        "description": "Generates a EXCEL file containing the list of family fleet.",
        "operationId": "generateFamilyFleetEXCEL",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EXCEL file generated successfully",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/family-fleet/csv": {
      "get": {
        "tags": [
          "Family Fleet"
        ],
        "summary": "Generate CSV file for family fleet",
        "description": "Generates a CSV file containing the list of family fleet.",
        "operationId": "generateFamilyFleetCSV",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/api/parameters/customers/excel": {
      "get": {
        "tags": [
          "Customer Management"
        ],
        "summary": "Generate Excel file for customers",
        "operationId": "generateCustomerExcel",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file generated",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/customers/csv": {
      "get": {
        "tags": [
          "Customer Management"
        ],
        "summary": "Generate CSV file for customers",
        "description": "Generates a CSV file containing the list of customers.",
        "operationId": "generateCustomerCSV",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/api/parameters/check-types/excel": {
      "get": {
        "tags": [
          "Check Types"
        ],
        "summary": "Download check types as Excel",
        "description": "Generates an Excel file containing check type data. Can be filtered using search parameters.",
        "operationId": "downloadCheckTypeExcel",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Text to search by check type or additional info",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Excel file generated successfully",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/check-types/csv": {
      "get": {
        "tags": [
          "Check Types"
        ],
        "summary": "Download check types as CSV",
        "description": "Generates a CSV file containing check type data. Can be filtered using search parameters.",
        "operationId": "downloadCheckTypeCsv",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Text to search by check type or additional info fields",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/categories/excel": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Download categories as Excel",
        "description": "Generates an Excel file containing category data. Can be filtered using search parameters.",
        "operationId": "downloadCategoryExcel",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Text to search by category name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Excel file generated successfully",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/categories/csv": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Download categories as CSV",
        "description": "Generates a CSV file containing category data. Can be filtered using search parameters.",
        "operationId": "downloadCategoryCsv",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Text to search by category name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/aircraft/excel": {
      "get": {
        "tags": [
          "Aircraft Management"
        ],
        "summary": "Generate Excel file for aircraft",
        "description": "Generates an Excel file containing the list of aircrafts.",
        "operationId": "generateAircraftsExcel",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tailNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fleetTypeName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file generated",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parameters/aircraft/csv": {
      "get": {
        "tags": [
          "Aircraft Management"
        ],
        "summary": "Generate CSV file for aircraft",
        "description": "Generates a CSV file containing the list of aircraft.",
        "operationId": "generateAircraftCSV",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fleetTypeName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tailNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "CSV file generated successfully",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DeleteRevenuesRequest": {
        "required": [
          "revenueIds"
        ],
        "type": "object",
        "properties": {
          "revenueIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteRevenuesResponse": {
        "type": "object",
        "properties": {
          "deletedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeletedRevenueInfo"
            }
          },
          "totalRevenues": {
            "type": "integer",
            "format": "int32"
          },
          "totalRubrics": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DeletedRevenueInfo": {
        "type": "object",
        "properties": {
          "revenueId": {
            "type": "string",
            "format": "uuid"
          },
          "rubricIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "cause": {
            "type": "string"
          }
        }
      },
      "UpdateHolidayRequest": {
        "required": [
          "active",
          "customerId",
          "date",
          "holidayName",
          "revisionId"
        ],
        "type": "object",
        "properties": {
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "holidayName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "HolidayResponse": {
        "type": "object",
        "properties": {
          "holidayId": {
            "type": "string",
            "format": "uuid"
          },
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "customerName": {
            "type": "string"
          },
          "holidayName": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DeleteHolidayRequest": {
        "required": [
          "holidayIds"
        ],
        "type": "object",
        "properties": {
          "holidayIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteHolidayResponse": {
        "type": "object",
        "properties": {
          "deletedHolidayIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UpdateHeatMapRequest": {
        "required": [
          "maximumCapacity",
          "monthYear",
          "revisionId"
        ],
        "type": "object",
        "properties": {
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "maximumCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "monthYear": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "HeatMapResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "opCoName": {
            "type": "string"
          },
          "opCoId": {
            "type": "string",
            "format": "uuid"
          },
          "maximumCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "monthYear": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DeleteHeatMapRequest": {
        "required": [
          "heatMapIds"
        ],
        "type": "object",
        "properties": {
          "heatMapIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteHeatMapResponse": {
        "type": "object",
        "properties": {
          "deletedHeatMapIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UpdateBlockRestrictionRequest": {
        "required": [
          "description",
          "endDate",
          "initialDate",
          "lineId",
          "revisionId"
        ],
        "type": "object",
        "properties": {
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "lineId": {
            "type": "string",
            "format": "uuid"
          },
          "initialDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "BlockRestrictionResponse": {
        "type": "object",
        "properties": {
          "blockRestrictionId": {
            "type": "string",
            "format": "uuid"
          },
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "lineId": {
            "type": "string",
            "format": "uuid"
          },
          "lineCode": {
            "type": "string"
          },
          "lineName": {
            "type": "string"
          },
          "initialDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DeleteBlockRestrictionRequest": {
        "required": [
          "blockRestrictionIds"
        ],
        "type": "object",
        "properties": {
          "blockRestrictionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteBlockRestrictionResponse": {
        "type": "object",
        "properties": {
          "deletedBlockRestrictionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UpdateTypeOfRevisionRequest": {
        "required": [
          "revisionName"
        ],
        "type": "object",
        "properties": {
          "revisionName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "TypeOfRevisionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "revisionName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UpdateLineRequest": {
        "required": [
          "active",
          "hangarId",
          "lineCode",
          "lineName",
          "lineOrder",
          "opCoId"
        ],
        "type": "object",
        "properties": {
          "lineCode": {
            "type": "string"
          },
          "lineName": {
            "type": "string"
          },
          "opCoId": {
            "type": "string",
            "format": "uuid"
          },
          "hangarId": {
            "type": "string",
            "format": "uuid"
          },
          "lineOrder": {
            "maximum": 5000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "LineResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hangarId": {
            "type": "string",
            "format": "uuid"
          },
          "hangarOrder": {
            "type": "integer",
            "format": "int32"
          },
          "hangarName": {
            "type": "string"
          },
          "opcoId": {
            "type": "string",
            "format": "uuid"
          },
          "opcoName": {
            "type": "string"
          },
          "lineCode": {
            "type": "string"
          },
          "lineName": {
            "type": "string"
          },
          "lineOrder": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "DeleteLineRequest": {
        "required": [
          "lineIds"
        ],
        "type": "object",
        "properties": {
          "lineIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteLineResponse": {
        "type": "object",
        "properties": {
          "deletedLineIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UpdateHangarRequest": {
        "required": [
          "active",
          "color",
          "hangarCode",
          "hangarName",
          "opCoId",
          "order",
          "overflow"
        ],
        "type": "object",
        "properties": {
          "hangarName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "hangarCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "opCoId": {
            "type": "string",
            "format": "uuid"
          },
          "familyFleetId": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "maximum": 500,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "overflow": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "HangarResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hangarName": {
            "type": "string"
          },
          "hangarCode": {
            "type": "string"
          },
          "opcoId": {
            "type": "string",
            "format": "uuid"
          },
          "opcoName": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "overflow": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          },
          "familyFleetId": {
            "type": "string",
            "format": "uuid"
          },
          "familyFleetName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DeleteHangarRequest": {
        "required": [
          "hangarIds"
        ],
        "type": "object",
        "properties": {
          "hangarIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteHangarResponse": {
        "type": "object",
        "properties": {
          "deletedHangarIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UpdateFleetTypeRequest": {
        "required": [
          "familyFleetId",
          "fleetTypeName"
        ],
        "type": "object",
        "properties": {
          "familyFleetId": {
            "type": "string",
            "format": "uuid"
          },
          "fleetTypeName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "patternId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "FleetTypeResponse": {
        "type": "object",
        "properties": {
          "fleetTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "fleetTypeName": {
            "type": "string"
          },
          "familyFleetId": {
            "type": "string",
            "format": "uuid"
          },
          "familyFleetName": {
            "type": "string"
          },
          "patternId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UpdateFamilyFleetRequest": {
        "required": [
          "aircraftManufacturer",
          "bodyType",
          "familyFleetName"
        ],
        "type": "object",
        "properties": {
          "familyFleetName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "aircraftManufacturer": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "bodyType": {
            "type": "string"
          }
        }
      },
      "CustomerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "colorHex": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FamilyFleetResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "aircraftManufacturer": {
            "type": "string"
          },
          "familyFleetName": {
            "type": "string"
          },
          "bodyType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DeleteFamilyFleetRequest": {
        "required": [
          "familyFleetIds"
        ],
        "type": "object",
        "properties": {
          "familyFleetIds": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteFleetTypesResponse": {
        "type": "object",
        "properties": {
          "deletedFleetTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UpdateCustomerRequest": {
        "required": [
          "code",
          "colorHex",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "code": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "colorHex": {
            "pattern": "^#([A-Fa-f0-9]{6})$",
            "type": "string"
          }
        }
      },
      "UpdateCheckTypeRequest": {
        "required": [
          "additionalInformation",
          "checkTypeName"
        ],
        "type": "object",
        "properties": {
          "checkTypeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "additionalInformation": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "patternId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CheckTypeResponse": {
        "type": "object",
        "properties": {
          "checkTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "checkTypeName": {
            "type": "string"
          },
          "additionalInformation": {
            "type": "string"
          },
          "patternId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UpdateCategoryRequest": {
        "required": [
          "categoryName",
          "endProbability",
          "initialProbability"
        ],
        "type": "object",
        "properties": {
          "categoryName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "initialProbability": {
            "type": "number",
            "format": "double"
          },
          "endProbability": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "format": "uuid"
          },
          "categoryName": {
            "type": "string"
          },
          "initialProbability": {
            "type": "number",
            "format": "double"
          },
          "endProbability": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DeleteCategoriesRequest": {
        "required": [
          "categoryIds"
        ],
        "type": "object",
        "properties": {
          "categoryIds": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteCategoriesResponse": {
        "type": "object",
        "properties": {
          "deletedCategories": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UpdateAircraftRequest": {
        "required": [
          "fleetTypeId",
          "manufacturerDate",
          "shipNumber",
          "tailNumber"
        ],
        "type": "object",
        "properties": {
          "tailNumber": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "shipNumber": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "fleetTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "manufacturerDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AircraftResponse": {
        "type": "object",
        "properties": {
          "aircraftId": {
            "type": "string",
            "format": "uuid"
          },
          "tailNumber": {
            "type": "string"
          },
          "shipNumber": {
            "type": "string"
          },
          "fleetTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "fleetTypeName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          },
          "manufacturerDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DeleteAircraftRequest": {
        "required": [
          "aircraftIds"
        ],
        "type": "object",
        "properties": {
          "aircraftIds": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteAircraftResponse": {
        "type": "object",
        "properties": {
          "deletedAircraftIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "CreateRevisionRequest": {
        "required": [
          "opCo",
          "revisionName",
          "revisionType",
          "week",
          "year"
        ],
        "type": "object",
        "properties": {
          "opCo": {
            "type": "string",
            "format": "uuid"
          },
          "fromRevision": {
            "type": "string",
            "format": "uuid"
          },
          "revisionName": {
            "type": "string"
          },
          "revisionType": {
            "type": "string"
          },
          "year": {
            "minimum": 2000,
            "type": "integer",
            "format": "int32"
          },
          "week": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string"
          },
          "baseline": {
            "type": "string",
            "format": "date-time"
          },
          "closure": {
            "type": "string",
            "format": "date-time"
          },
          "isOfficial": {
            "type": "boolean"
          }
        }
      },
      "RevisionResponse": {
        "type": "object",
        "properties": {
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "revisionCode": {
            "type": "integer",
            "format": "int32"
          },
          "opCoId": {
            "type": "string",
            "format": "uuid"
          },
          "revisionName": {
            "type": "string"
          },
          "revisionType": {
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "week": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string"
          },
          "baseline": {
            "type": "string",
            "format": "date-time"
          },
          "closure": {
            "type": "string",
            "format": "date-time"
          },
          "dateUploaded": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastEditedBy": {
            "type": "string",
            "format": "uuid"
          },
          "official": {
            "type": "boolean"
          }
        }
      },
      "CreateAdHocRevenueRequest": {
        "required": [
          "aircraftId",
          "checkTypeId",
          "customerId",
          "isAssociatedToEvent",
          "lineId",
          "registrationDate",
          "revisionId",
          "rubrics",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "LABOR",
              "MATERIAL",
              "ENGINEERING",
              "MISCELLANEOUS"
            ]
          },
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "aircraftId": {
            "type": "string",
            "format": "uuid"
          },
          "checkTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "lineId": {
            "type": "string",
            "format": "uuid"
          },
          "workOrder": {
            "type": "string"
          },
          "customerLine": {
            "type": "string"
          },
          "isAssociatedToEvent": {
            "type": "boolean"
          },
          "registrationDate": {
            "type": "string",
            "format": "date"
          },
          "dateIn": {
            "type": "string",
            "format": "date"
          },
          "dateOut": {
            "type": "string",
            "format": "date"
          },
          "comment": {
            "type": "string"
          },
          "rubrics": {
            "$ref": "#/components/schemas/RubricsRequest"
          },
          "replace": {
            "type": "boolean"
          }
        }
      },
      "RubricRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RubricType"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "billableLaborHours": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RubricType": {
        "type": "object"
      },
      "RubricsRequest": {
        "type": "object",
        "properties": {
          "airframe": {
            "$ref": "#/components/schemas/RubricRequest"
          },
          "backshop": {
            "$ref": "#/components/schemas/RubricRequest"
          },
          "engineering": {
            "$ref": "#/components/schemas/RubricRequest"
          },
          "nonDestructiveTest": {
            "$ref": "#/components/schemas/RubricRequest"
          },
          "interiors": {
            "$ref": "#/components/schemas/RubricRequest"
          },
          "components": {
            "$ref": "#/components/schemas/RubricRequest"
          },
          "paint": {
            "$ref": "#/components/schemas/RubricRequest"
          },
          "miscellaneous": {
            "$ref": "#/components/schemas/RubricRequest"
          }
        }
      },
      "CreateAdHocRevenueResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "LABOR",
              "MATERIAL",
              "ENGINEERING",
              "MISCELLANEOUS"
            ]
          },
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "aircraftId": {
            "type": "string",
            "format": "uuid"
          },
          "checkTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "lineId": {
            "type": "string",
            "format": "uuid"
          },
          "workOrder": {
            "type": "string"
          },
          "customerLine": {
            "type": "string"
          },
          "isAssociatedToEvent": {
            "type": "boolean"
          },
          "registrationDate": {
            "type": "string",
            "format": "date"
          },
          "dateIn": {
            "type": "string",
            "format": "date"
          },
          "dateOut": {
            "type": "string",
            "format": "date"
          },
          "comment": {
            "type": "string"
          },
          "rubrics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RubricResponse"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedInfo": {
            "$ref": "#/components/schemas/DeletedRevenueInfo"
          }
        }
      },
      "RubricResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/RubricType"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "billableLaborHours": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateHolidayRequest": {
        "required": [
          "active",
          "customerId",
          "dates",
          "holidayName",
          "revisionId"
        ],
        "type": "object",
        "properties": {
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "holidayName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "dates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            }
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "CreateHeatMapRequest": {
        "required": [
          "maximumCapacity",
          "monthYear",
          "revisionId"
        ],
        "type": "object",
        "properties": {
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "maximumCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "monthYear": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "CreateBlockRestrictionRequest": {
        "required": [
          "description",
          "endDate",
          "initialDate",
          "lineId",
          "revisionId"
        ],
        "type": "object",
        "properties": {
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "lineId": {
            "type": "string",
            "format": "uuid"
          },
          "initialDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "CreateTypeOfRevisionRequest": {
        "required": [
          "revisionName"
        ],
        "type": "object",
        "properties": {
          "revisionName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "DeleteTypeOfRevisionsRequest": {
        "required": [
          "typeOfRevisionIds"
        ],
        "type": "object",
        "properties": {
          "typeOfRevisionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteTypeOfRevisionsResponse": {
        "type": "object",
        "properties": {
          "deletedTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CreateLineRequest": {
        "required": [
          "active",
          "hangarId",
          "lineCode",
          "lineName",
          "lineOrder",
          "opCoId"
        ],
        "type": "object",
        "properties": {
          "hangarId": {
            "type": "string",
            "format": "uuid"
          },
          "opCoId": {
            "type": "string",
            "format": "uuid"
          },
          "lineCode": {
            "type": "string"
          },
          "lineName": {
            "type": "string"
          },
          "lineOrder": {
            "maximum": 5000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "color": {
            "maxLength": 7,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "CreateHangarRequest": {
        "required": [
          "active",
          "hangarCode",
          "hangarName",
          "opCoId",
          "order",
          "overflow"
        ],
        "type": "object",
        "properties": {
          "hangarName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "hangarCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "opCoId": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "maximum": 500,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "familyFleetId": {
            "type": "string",
            "format": "uuid"
          },
          "color": {
            "type": "string"
          },
          "overflow": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "CreateFleetTypeRequest": {
        "required": [
          "familyFleetId",
          "fleetTypeName"
        ],
        "type": "object",
        "properties": {
          "familyFleetId": {
            "type": "string",
            "format": "uuid"
          },
          "fleetTypeName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "patternId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DeleteFleetTypesRequest": {
        "required": [
          "fleetTypeIds"
        ],
        "type": "object",
        "properties": {
          "fleetTypeIds": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "CreateFamilyFleetRequest": {
        "required": [
          "aircraftManufacturer",
          "bodyType",
          "familyFleetName"
        ],
        "type": "object",
        "properties": {
          "aircraftManufacturer": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "familyFleetName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "bodyType": {
            "type": "string"
          }
        }
      },
      "CreateCustomerRequest": {
        "required": [
          "code",
          "colorHex",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "code": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "colorHex": {
            "pattern": "^#([A-Fa-f0-9]{6})$",
            "type": "string"
          }
        }
      },
      "DeleteCustomersRequest": {
        "required": [
          "customerIds"
        ],
        "type": "object",
        "properties": {
          "customerIds": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteCustomersResponse": {
        "type": "object",
        "properties": {
          "deletedCustomers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "CreateCheckTypeRequest": {
        "required": [
          "additionalInformation",
          "checkTypeName"
        ],
        "type": "object",
        "properties": {
          "checkTypeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "additionalInformation": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "patternId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DeleteCheckTypesRequest": {
        "required": [
          "checkTypeIds"
        ],
        "type": "object",
        "properties": {
          "checkTypeIds": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DeleteCheckTypesResponse": {
        "type": "object",
        "properties": {
          "deletedCheckTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "totalDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "CreateCategoryRequest": {
        "required": [
          "categoryName",
          "endProbability",
          "initialProbability"
        ],
        "type": "object",
        "properties": {
          "categoryName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "initialProbability": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "endProbability": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreateAircraftRequest": {
        "required": [
          "fleetTypeId",
          "manufacturerDate",
          "shipNumber",
          "tailNumber"
        ],
        "type": "object",
        "properties": {
          "tailNumber": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "shipNumber": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "fleetTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "manufacturerDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "PaginatedRevisionResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RevisionResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "PaginationInfo": {
        "type": "object",
        "properties": {
          "returnedItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "integer",
            "format": "int32"
          },
          "previousPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Revision": {
        "type": "object",
        "properties": {
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "revisionCode": {
            "type": "integer",
            "format": "int32"
          },
          "opCoId": {
            "type": "string",
            "format": "uuid"
          },
          "fromRevision": {
            "type": "string",
            "format": "uuid"
          },
          "revisionName": {
            "type": "string"
          },
          "revisionType": {
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "week": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isOfficial": {
            "type": "boolean"
          },
          "baseline": {
            "type": "string",
            "format": "date-time"
          },
          "closure": {
            "type": "string",
            "format": "date-time"
          },
          "dateUploaded": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastEditedBy": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AdHocRevenueResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "LABOR",
              "MATERIAL",
              "ENGINEERING",
              "MISCELLANEOUS"
            ]
          },
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "aircraftId": {
            "type": "string",
            "format": "uuid"
          },
          "checkTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "lineId": {
            "type": "string",
            "format": "uuid"
          },
          "workOrder": {
            "type": "string"
          },
          "customerLine": {
            "type": "string"
          },
          "isAssociatedToEvent": {
            "type": "boolean"
          },
          "registrationDate": {
            "type": "string",
            "format": "date"
          },
          "dateIn": {
            "type": "string",
            "format": "date"
          },
          "dateOut": {
            "type": "string",
            "format": "date"
          },
          "comment": {
            "type": "string"
          },
          "customerCode": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "aircraftTailNumber": {
            "type": "string"
          },
          "checkTypeName": {
            "type": "string"
          },
          "checkTypeAdditionalInfo": {
            "type": "string"
          },
          "lineCode": {
            "type": "string"
          },
          "lineName": {
            "type": "string"
          },
          "rubrics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RubricResponse"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaginatedAdHocRevenueResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdHocRevenueResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "PaginatedHolidayResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HolidayResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PaginatedHeatMapResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeatMapResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PaginatedBlockRestrictionResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockRestrictionResponse"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RevisionSuggestion": {
        "type": "object",
        "properties": {
          "revisionCode": {
            "type": "string"
          },
          "revisionName": {
            "type": "string"
          },
          "revisionType": {
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "week": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Holiday": {
        "type": "object",
        "properties": {
          "holidayId": {
            "type": "string",
            "format": "uuid"
          },
          "holidayName": {
            "type": "string"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "customerName": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "revisionCode": {
            "type": "string",
            "format": "uuid"
          },
          "active": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "HeatMap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "opCoName": {
            "type": "string"
          },
          "opCoId": {
            "type": "string",
            "format": "uuid"
          },
          "maximumCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "monthYear": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "BlockRestriction": {
        "type": "object",
        "properties": {
          "blockRestrictionId": {
            "type": "string",
            "format": "uuid"
          },
          "revisionId": {
            "type": "string",
            "format": "uuid"
          },
          "lineId": {
            "type": "string",
            "format": "uuid"
          },
          "lineCode": {
            "type": "string"
          },
          "lineName": {
            "type": "string"
          },
          "initialDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PaginatedTypeOfRevisionResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeOfRevisionResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "PaginatedPatternResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatternResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "PatternResponse": {
        "type": "object",
        "properties": {
          "patternId": {
            "type": "string",
            "format": "uuid"
          },
          "patternName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "blobUrl": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "OpcoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "opcoName": {
            "type": "string"
          },
          "logoBlobUrl": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OpcoSearchResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpcoResponse"
            }
          }
        }
      },
      "PaginatedLineResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "Line": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hangarId": {
            "type": "string",
            "format": "uuid"
          },
          "hangarName": {
            "type": "string"
          },
          "opCoId": {
            "type": "string",
            "format": "uuid"
          },
          "opCoName": {
            "type": "string"
          },
          "lineCode": {
            "type": "string"
          },
          "lineName": {
            "type": "string"
          },
          "lineOrder": {
            "type": "integer",
            "format": "int32"
          },
          "harngarOrder": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          },
          "activeStatus": {
            "type": "string"
          }
        }
      },
      "PaginatedHangarResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HangarResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "Hangar": {
        "type": "object",
        "properties": {
          "hangarId": {
            "type": "string",
            "format": "uuid"
          },
          "opCoId": {
            "type": "string",
            "format": "uuid"
          },
          "opCoName": {
            "type": "string"
          },
          "hangarName": {
            "type": "string"
          },
          "hangarCode": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "activeStatus": {
            "type": "string"
          },
          "overflow": {
            "type": "boolean"
          },
          "overflowStatus": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "familyFleetName": {
            "type": "string"
          },
          "familyFleetId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PaginatedFleetTypeResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FleetTypeResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "PaginatedFamilyFleetResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FamilyFleetResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "FamilyFleet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "aircraftManufacture": {
            "type": "string"
          },
          "familyFleetName": {
            "type": "string"
          },
          "bodyType": {
            "type": "string",
            "enum": [
              "NARROW BODY",
              "WIDE BODY"
            ]
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PaginatedCustomerResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "PaginatedChecktypeResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckTypeResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "PaginatedCategoryResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "PaginatedAircraftResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        }
      },
      "Aircraft": {
        "type": "object",
        "properties": {
          "aircraftId": {
            "type": "string",
            "format": "uuid"
          },
          "tailNumber": {
            "type": "string"
          },
          "shipNumber": {
            "type": "string"
          },
          "fleetTypeName": {
            "type": "string"
          },
          "fleetTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "lastModifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "previousVersionId": {
            "type": "string",
            "format": "uuid"
          },
          "manufacturerDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}